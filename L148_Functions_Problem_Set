> isEven()
1# Write a function 'isEven()' which takes a single numeric argument and returns true if the number is even, and false otherwise.
> isEven(4);   //true
> isEven(21);  //false

function isEven(x) {
    if (x % 2 === 0) { 
        return ("true");
    }
    else {
        return ("false");
    }
}

**but we can write it this way (the way Steele wrote)
function isEven(num) {
    return num % 2 === 0;
}

> factorial()
2# write a function 'factorial()' which takes a single numeric argument and returns the factorial of that number.
ex: 4! is 4 x 3 x 2 x 1
    0! is 1

function factorial(x) 
{ 

  if (x === 0)
 {
    return 1;
 }
  return x * factorial(x-1);
         
}

** the way Steele wrote is:
function factorial(num) {
    //define a result variable
    var result = 1;
   //calculate factorial and store value in result
    for (var i = 2; i <= num; i++) {
        //result = result * i; 
        result *= i;
      }
        //return the result variable
       return result;
}

> kebabToSnake()
3# write a function 'kebabToSnake()' which takes a single kebab-cased string argument and returns the snake_cased version.
>basically, replace '-' with '_'s
> kebabToSnake("hello-world");   //"hello_world"

function kebabToSnake(str) {
    return str.replace(/-/g, "_");
}
